<?xml version = "1.0" encoding = "ISO-8859-1"?>
<!--This file is auto-generated by class EL_PYXIS_PARSER (eiffel-loop.com)-->
<system xmlns = "http://www.eiffel.com/developers/xml/configuration-1-16-0" xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation = "http://www.eiffel.com/developers/xml/configuration-1-16-0 http://www.eiffel.com/developers/xml/configuration-1-16-0.xsd" name = "EL_eros" uuid = "229b7574-09aa-11df-87bf-1b0f428786d3" library_target = "EL_eros">
	<description>
Eiffel Remote Object Server (EROS)

EROS (for **E**iffel **R**emote **O**bject **S**erver), is an experimental an XML orientated remote
procedure call application framework with an original protocol based purely on XML processing instructions
rather that any special XML tags.

See doc/eros.txt for details
	</description>
	<target name = "EL_eros">
		<root all_classes = "true"/>
		<option syntax = "standard" full_class_checking = "false" void_safety = "none" trace = "false" debug = "false" warning = "true">
			<assertions precondition = "true" postcondition = "true" check = "true" invariant = "true"/>
		</option>
		<library name = "base" location = "$ISE_LIBRARY/library/base/base.ecf"/>
		<library name = "net" location = "$ISE_LIBRARY/library/net/net.ecf"/>
		<!--Eiffel Loop overrides-->
		<library name = "vision2" location = "override/ES-vision2.ecf">
			<condition>
				<custom name = "eros_server_enabled" value = "true"/>
			</condition>
		</library>
		<!--
			Eiffel Loop libraries
			
		-->
		<library name = "EL_base" location = "base/base.ecf"/>
		<library name = "EL_app_manage" location = "app-manage.ecf"/>
		<library name = "EL_evolicity" location = "evolicity.ecf"/>
		<library name = "EL_logging" location = "logging.ecf"/>
		<library name = "EL_net_base" location = "network.ecf"/>
		<library name = "EL_thread" location = "thread.ecf"/>
		<library name = "EL_text_process" location = "text-process.ecf"/>
		<library name = "EL_vision2" location = "vision2-x.ecf">
			<condition>
				<custom name = "eros_server_enabled" value = "true"/>
			</condition>
		</library>
		<library name = "EL_xdoc_scanning" location = "xdoc-scanning.ecf"/>
		<!--Source code-->
		<cluster name = "common" location = "network/eros" recursive = "true">
			<file_rule>
				<exclude>/UI$</exclude>
			</file_rule>
			<file_rule>
				<exclude>/client$</exclude>
			</file_rule>
			<file_rule>
				<exclude>/server$</exclude>
			</file_rule>
		</cluster>
		<cluster name = "client" location = "network/eros/client" recursive = "true">
			<condition>
				<custom name = "eros_server_enabled" value = "false"/>
			</condition>
		</cluster>
		<cluster name = "server" location = "network/eros/server" recursive = "true">
			<condition>
				<custom name = "eros_server_enabled" value = "true"/>
			</condition>
		</cluster>
	</target>
</system>
