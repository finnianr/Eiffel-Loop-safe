pyxis-doc:
	version = 1.0; encoding = "ISO-8859-1"

# Pyxis as an acronym stands for: Pythonic XML ideal source.
# It is also a Latin transliteration of a Greek word for a type of pottery used by women to hold 
# cosmetics, trinkets or jewellery. 

system:
	configuration_ns = "1-16-0"
	name = EL_wav_audio; uuid = "229b770e-09aa-11df-87c3-c377311e3588" 
	library_target = EL_wav_audio
	description: 
		"""
			WAV Audio Processing
			
			Classes for reading and writing wav files on the Windows OS
		"""
	
	target:
		name = EL_wav_audio
		option:
			namespace = "Eiffel-Loop.Library.Audio-files"
			syntax = standard; full_class_checking = false; void_safety = none
			trace = false; debug = false; warning = true
			assertions:
				precondition = true; postcondition = true; check = true; invariant = true

		root:
			all_classes = true

		# For Windows: Internal WaveOut API callback function.
		external_include: 
			location = "$(EL_C_LIB)/audio/source"
			condition:
				platform:
					value = windows

		external_include:
			location = "$(ISE_LIBRARY)/C_library/zlib"
					
		external_object:
			location = "$(EL_C_LIB)/audio/spec/$(ISE_PLATFORM)/el_audio.lib"
			condition:
				platform:
					value = windows

		external_object:
			location = 'WinMM.lib'
			condition:
				platform:
					value = windows

		external_object:
			location = "-L$(ISE_LIBRARY)/C_library/zlib -lz"
			condition:
				platform:
					value = unix

		library: 
			name = base; location = "$ISE_LIBRARY/library/base/base.ecf"

		library:
			name = c_library_zlib; location = "$ISE_LIBRARY/C_library/zlib/clibs_zlib.ecf"
			condition:
				platform:
					value = windows

		# Eiffel Loop
		library:
			name = EL_base; location = "base/base.ecf"
			readonly = false

		# Source code
		cluster:
			name = wav; location = "multimedia/audio/file/wav"; recursive = true
			option:
				namespace = "Eiffel-Loop.Wav-files"


