#	author: "Finnian Reilly"
#	copyright: "Copyright (c) 2001-2009 Finnian Reilly"
#	contact: "finnian at eiffel hyphen loop dot com"
#	license: "MIT license (See: en.wikipedia.org/wiki/MIT_License)"
#	date: "6 Jan 2010"
#	revision: "0.1"

import os, sys, platform
from os import path
from glob import glob

java_base = os.environ.get('JDK_HOME')
jdk_include = path.join (java_base, 'include')
jdk_include_platform = path.join (jdk_include, sys.platform)

if platform.system () == "Windows":
	compiler_flags = ['-Ox', '-MT', '-w', '-nologo', '-D_WIN32_WINNT=0x0500', '-DWINVER=0x0500', '-D_CRT_SECURE_NO_DEPRECATE', '-D_UNICODE -DUNICODE']
else:
	compiler_flags = '-c -O3 -w -Wno-write-strings -std=gnu99'

include_path = ['source', jdk_include, jdk_include_platform]				

source_files = [path.join ('source' ,'dljni.c')]

print include_path

env = Environment(CCFLAGS = compiler_flags, CPPPATH = include_path, ENV = os.environ)

lib = env.StaticLibrary ('dljni', source_files)

env.NoClean (lib)
Return ('lib')
