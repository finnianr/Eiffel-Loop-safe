#	author: "Finnian Reilly"
#	copyright: "Copyright (c) 2001-2016 Finnian Reilly"
#	contact: "finnian at eiffel hyphen loop dot com"
#	license: "MIT license (See: en.wikipedia.org/wiki/MIT_License)"
#	date: "20 July 2016"

import os, sys, platform
from os import path

from eiffel_loop.scons import util
from eiffel_loop.eiffel import project

def new_path (a_path):
	return path.expandvars (path.normpath (a_path))

include_path = [
	new_path ('$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/include'),
	new_path ('$EIFFEL_LOOP/C_library/include')
]

is_windows = platform.system () == "Windows"

if is_windows:
	include_path.append (new_path ('$ISE_EIFFEL/library/cURL/spec/include'))
	compiler_flags = ['-Ox', '-Zi', '-MT', '-w', '-nologo', '-DEIF_THREADS', '-DEIF_WINDOWS']
	
else:
	compiler_flags = ['-g', '-O2', '-Wno-write-strings', '-DEIF_THREADS', '-DEIF_LINUXTHREADS']

env = Environment(CCFLAGS = compiler_flags, CPPPATH = include_path, ENV = os.environ)

build_dir =  project.platform_spec_build_dir ()

VariantDir (build_dir, 'source', duplicate=0)

sources = Glob (path.join (build_dir, '*.c'))
lib = env.StaticLibrary (path.join (build_dir, 'elcurl'), sources)
	
env.NoClean (lib)
#Return ('lib')
