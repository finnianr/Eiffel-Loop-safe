**Sub-applications**

`-eiffel_view': [$source EIFFEL_VIEW_APP]

A sub-application to publish source code and descriptions of Eiffel projects
to a website as static html and generate a `Contents.md' file in Github markdown.
See [https://www.eiffel.org/blog/Finnian%20Reilly/2018/10/eiffel-view-repository-publisher-version-1-0-18
 eiffel.org article]

`-generate_codecs': [$source CODEC_GENERATOR_APP]

Generate Eiffel classes conforming to [$source EL_ZCODEC] from VTD-XML C code

`-ecf_to_pecf': [$source ECF_TO_PECF_APP]

Convert Eiffel configuration files to Pyxis format

`-library_override': [$source LIBRARY_OVERRIDE_APP]

Generates override of standard libaries to work with Eiffel-Loop

`-expand_links': [$source REPOSITORY_NOTE_LINK_CHECKER_APP]

Use a supplied repository publishing configuration to expand `$source' variable path in wiki-links 
containined in a wiki-markup text file. Write the expanded output to file named as follows:

	<file name>.expanded.<file extension>
	
An incidental function is to expand all tabs as 3 spaces.

`-normalize_class_file_name': [$source SOURCE_FILE_NAME_NORMALIZER_APP]

Normalize class filenames as lowercase classnames within a source directory

`normalize_imp_location' [$source IMP_CLASS_LOCATION_NORMALIZER_APP]

Normalizes location of implementation classes in relation to respective interfaces
for all projects listed in publisher configuration.

**Download**

Download binary of [https://github.com/finnianr/Eiffel-Loop/releases/latest `el_eiffel']
for ''Ubuntu 14.04'' or ''Linux Mint 17.x''.
